/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        tap_hold: tap_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_HOLD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        long_tap_hold: long_tap_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "LONG_TAP_HOLD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
        };

        fast_tap_hold: fast_tap_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "FAST_TAP_HOLD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };

        tap_layer_hold: tap_layer_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_LAYER_HOLD";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&bt BT_SEL 0  &tap_hold DOUBLE_QUOTES Q  &tap_hold COLON W         &tap_hold EQUAL F  &tap_hold UNDERSCORE P       &kp B                            &kp J                           &kp L                    &kp U              &kp Y                      &kp SEMICOLON               &kp BACKSLASH
&kp MINUS     &long_tap_hold LEFT_ALT A  &tap_hold LEFT_COMMAND R  &tap_hold LCTRL S  &tap_hold LEFT_SHIFT T       &kp G                            &kp M                           &tap_hold RSHIFT N       &tap_hold RCTRL E  &tap_hold RIGHT_COMMAND I  &long_tap_hold RIGHT_ALT O  &kp SQT
&kp ESC       &kp Z                      &kp X                     &kp C              &kp D                        &kp V                            &kp K                           &kp H                    &kp COMMA          &kp DOT                    &kp FSLH                    &kp GRAVE
                                                                   &mo 1              &tap_layer_hold 1 BACKSPACE  &fast_tap_hold LEFT_SHIFT TAB    &tap_hold LS(RIGHT_GUI) RETURN  &tap_layer_hold 2 SPACE  &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&bt BT_SEL 1     &kp N1            &kp N2             &kp N3          &kp N4           &kp N5                   &kp PLUS   &kp N7        &kp N8        &kp N9        &kp N0  &trans
&bt BT_CLR       &trans            &trans             &trans          &trans           &kp LEFT_PARENTHESIS     &kp MINUS  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans  &trans
&rgb_ug RGB_TOG  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS    &kp EQUAL  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
                                                      &trans          &trans           &trans                   &trans     &trans        &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&bt BT_SEL 2  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp ASTRK     &kp LPAR   &kp RPAR  &kp BSPC
&kp LCTRL     &trans    &trans  &trans    &trans    &trans       &kp LEFT   &kp DOWN  &kp UP_ARROW  &kp RIGHT  &kp BSLH  &kp GRAVE
&kp LSHFT     &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS  &kp LBRC      &kp RBRC   &kp PIPE  &kp TILDE
                                &none     &trans    &trans       &trans     &trans    &none
            >;
        };
    };
};
